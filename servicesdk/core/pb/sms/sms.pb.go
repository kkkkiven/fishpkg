// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sms.proto

package gpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReqSend struct {
	Userid               int64             `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Phone                string            `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Purpose              string            `protobuf:"bytes,3,opt,name=purpose,proto3" json:"purpose,omitempty"`
	Ip                   int64             `protobuf:"varint,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Ext                  map[string]string `protobuf:"bytes,7,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReqSend) Reset()         { *m = ReqSend{} }
func (m *ReqSend) String() string { return proto.CompactTextString(m) }
func (*ReqSend) ProtoMessage()    {}
func (*ReqSend) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8d8bdc537111860, []int{0}
}

func (m *ReqSend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSend.Unmarshal(m, b)
}
func (m *ReqSend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSend.Marshal(b, m, deterministic)
}
func (m *ReqSend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSend.Merge(m, src)
}
func (m *ReqSend) XXX_Size() int {
	return xxx_messageInfo_ReqSend.Size(m)
}
func (m *ReqSend) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSend.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSend proto.InternalMessageInfo

func (m *ReqSend) GetUserid() int64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *ReqSend) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *ReqSend) GetPurpose() string {
	if m != nil {
		return m.Purpose
	}
	return ""
}

func (m *ReqSend) GetIp() int64 {
	if m != nil {
		return m.Ip
	}
	return 0
}

func (m *ReqSend) GetExt() map[string]string {
	if m != nil {
		return m.Ext
	}
	return nil
}

type RespSend struct {
	Code                 int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Interval             int32             `protobuf:"varint,3,opt,name=interval,proto3" json:"interval,omitempty"`
	Surplus              int32             `protobuf:"varint,4,opt,name=surplus,proto3" json:"surplus,omitempty"`
	Token                string            `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	Ext                  map[string]string `protobuf:"bytes,6,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RespSend) Reset()         { *m = RespSend{} }
func (m *RespSend) String() string { return proto.CompactTextString(m) }
func (*RespSend) ProtoMessage()    {}
func (*RespSend) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8d8bdc537111860, []int{1}
}

func (m *RespSend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespSend.Unmarshal(m, b)
}
func (m *RespSend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespSend.Marshal(b, m, deterministic)
}
func (m *RespSend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespSend.Merge(m, src)
}
func (m *RespSend) XXX_Size() int {
	return xxx_messageInfo_RespSend.Size(m)
}
func (m *RespSend) XXX_DiscardUnknown() {
	xxx_messageInfo_RespSend.DiscardUnknown(m)
}

var xxx_messageInfo_RespSend proto.InternalMessageInfo

func (m *RespSend) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RespSend) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *RespSend) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *RespSend) GetSurplus() int32 {
	if m != nil {
		return m.Surplus
	}
	return 0
}

func (m *RespSend) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RespSend) GetExt() map[string]string {
	if m != nil {
		return m.Ext
	}
	return nil
}

type ReqVerify struct {
	Userid               int64             `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Phone                string            `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Token                string            `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Content              string            `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Purpose              string            `protobuf:"bytes,5,opt,name=purpose,proto3" json:"purpose,omitempty"`
	Ip                   int64             `protobuf:"varint,6,opt,name=ip,proto3" json:"ip,omitempty"`
	Ext                  map[string]string `protobuf:"bytes,7,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReqVerify) Reset()         { *m = ReqVerify{} }
func (m *ReqVerify) String() string { return proto.CompactTextString(m) }
func (*ReqVerify) ProtoMessage()    {}
func (*ReqVerify) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8d8bdc537111860, []int{2}
}

func (m *ReqVerify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqVerify.Unmarshal(m, b)
}
func (m *ReqVerify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqVerify.Marshal(b, m, deterministic)
}
func (m *ReqVerify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqVerify.Merge(m, src)
}
func (m *ReqVerify) XXX_Size() int {
	return xxx_messageInfo_ReqVerify.Size(m)
}
func (m *ReqVerify) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqVerify.DiscardUnknown(m)
}

var xxx_messageInfo_ReqVerify proto.InternalMessageInfo

func (m *ReqVerify) GetUserid() int64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *ReqVerify) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *ReqVerify) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ReqVerify) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ReqVerify) GetPurpose() string {
	if m != nil {
		return m.Purpose
	}
	return ""
}

func (m *ReqVerify) GetIp() int64 {
	if m != nil {
		return m.Ip
	}
	return 0
}

func (m *ReqVerify) GetExt() map[string]string {
	if m != nil {
		return m.Ext
	}
	return nil
}

type RespVerify struct {
	Code                 int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Ext                  map[string]string `protobuf:"bytes,3,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RespVerify) Reset()         { *m = RespVerify{} }
func (m *RespVerify) String() string { return proto.CompactTextString(m) }
func (*RespVerify) ProtoMessage()    {}
func (*RespVerify) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8d8bdc537111860, []int{3}
}

func (m *RespVerify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespVerify.Unmarshal(m, b)
}
func (m *RespVerify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespVerify.Marshal(b, m, deterministic)
}
func (m *RespVerify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespVerify.Merge(m, src)
}
func (m *RespVerify) XXX_Size() int {
	return xxx_messageInfo_RespVerify.Size(m)
}
func (m *RespVerify) XXX_DiscardUnknown() {
	xxx_messageInfo_RespVerify.DiscardUnknown(m)
}

var xxx_messageInfo_RespVerify proto.InternalMessageInfo

func (m *RespVerify) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RespVerify) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *RespVerify) GetExt() map[string]string {
	if m != nil {
		return m.Ext
	}
	return nil
}

func init() {
	proto.RegisterType((*ReqSend)(nil), "gpb.ReqSend")
	proto.RegisterMapType((map[string]string)(nil), "gpb.ReqSend.ExtEntry")
	proto.RegisterType((*RespSend)(nil), "gpb.RespSend")
	proto.RegisterMapType((map[string]string)(nil), "gpb.RespSend.ExtEntry")
	proto.RegisterType((*ReqVerify)(nil), "gpb.ReqVerify")
	proto.RegisterMapType((map[string]string)(nil), "gpb.ReqVerify.ExtEntry")
	proto.RegisterType((*RespVerify)(nil), "gpb.RespVerify")
	proto.RegisterMapType((map[string]string)(nil), "gpb.RespVerify.ExtEntry")
}

func init() { proto.RegisterFile("sms.proto", fileDescriptor_c8d8bdc537111860) }

var fileDescriptor_c8d8bdc537111860 = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xcb, 0x4a, 0xc3, 0x40,
	0x14, 0x86, 0x99, 0x4c, 0x93, 0x34, 0x47, 0x10, 0x19, 0xb4, 0x0e, 0x5d, 0x95, 0x6e, 0x8c, 0x2e,
	0xb2, 0x50, 0x10, 0x71, 0xdf, 0x17, 0x18, 0xc1, 0x7d, 0x2f, 0xc7, 0x1a, 0xda, 0x26, 0xd3, 0x99,
	0x49, 0x69, 0x5f, 0xc4, 0x07, 0xf2, 0x41, 0x7c, 0x0c, 0xd7, 0x32, 0x27, 0x17, 0xba, 0x70, 0xa1,
	0xd0, 0xdd, 0xf9, 0x87, 0xcc, 0xc9, 0xf7, 0xe5, 0x27, 0x90, 0xd8, 0x8d, 0xcd, 0xb4, 0x29, 0x5d,
	0x29, 0xf8, 0x52, 0xcf, 0xc6, 0x9f, 0x0c, 0x62, 0x85, 0xdb, 0x17, 0x2c, 0x16, 0x62, 0x00, 0x51,
	0x65, 0xd1, 0xe4, 0x0b, 0xc9, 0x46, 0x2c, 0xe5, 0xaa, 0x49, 0xe2, 0x12, 0x42, 0xfd, 0x5e, 0x16,
	0x28, 0x83, 0x11, 0x4b, 0x13, 0x55, 0x07, 0x21, 0x21, 0xd6, 0x95, 0xd1, 0xa5, 0x45, 0xc9, 0xe9,
	0xbc, 0x8d, 0xe2, 0x1c, 0x82, 0x5c, 0xcb, 0x1e, 0xed, 0x08, 0x72, 0x2d, 0x6e, 0x80, 0xe3, 0xde,
	0xc9, 0x78, 0xc4, 0xd3, 0xb3, 0xfb, 0xab, 0x6c, 0xa9, 0x67, 0x59, 0xf3, 0xca, 0x6c, 0xb2, 0x77,
	0x93, 0xc2, 0x99, 0x83, 0xf2, 0x4f, 0x0c, 0x1f, 0xa1, 0xdf, 0x1e, 0x88, 0x0b, 0xe0, 0x2b, 0x3c,
	0x10, 0x49, 0xa2, 0xfc, 0xe8, 0x31, 0x76, 0xd3, 0x75, 0xd5, 0x61, 0x50, 0x78, 0x0e, 0x9e, 0xd8,
	0xf8, 0x8b, 0x41, 0x5f, 0xa1, 0xd5, 0x64, 0x21, 0xa0, 0x37, 0x2f, 0x17, 0x48, 0x37, 0x43, 0x45,
	0xb3, 0x5f, 0xb6, 0xb1, 0xcb, 0xe6, 0xa2, 0x1f, 0xc5, 0x10, 0xfa, 0x79, 0xe1, 0xd0, 0xec, 0xa6,
	0x6b, 0xc2, 0x0f, 0x55, 0x97, 0xbd, 0x99, 0xad, 0x8c, 0x5e, 0x57, 0x96, 0x24, 0x42, 0xd5, 0x46,
	0x8f, 0xe0, 0xca, 0x15, 0x16, 0x32, 0xac, 0x11, 0x28, 0x88, 0xb4, 0xf6, 0x8b, 0xc8, 0x6f, 0xd0,
	0xf8, 0xd5, 0x34, 0x27, 0x12, 0xfc, 0x66, 0x90, 0x28, 0xdc, 0xbe, 0xa2, 0xc9, 0xdf, 0x0e, 0xff,
	0xec, 0xa9, 0x63, 0xe6, 0xc7, 0xcc, 0x12, 0xe2, 0x79, 0x59, 0x38, 0x2c, 0x1c, 0x39, 0x26, 0xaa,
	0x8d, 0xc7, 0xbd, 0x86, 0xbf, 0xf5, 0x1a, 0x75, 0xbd, 0xde, 0x1e, 0xf7, 0x7a, 0xdd, 0xf6, 0x5a,
	0x43, 0x9e, 0x48, 0xfc, 0x83, 0x01, 0xf8, 0x6f, 0xd9, 0x98, 0xff, 0xad, 0xdb, 0xbb, 0x9a, 0x8b,
	0x13, 0x97, 0xec, 0xfa, 0x38, 0x25, 0xd8, 0x2c, 0xa2, 0x7f, 0xe8, 0xe1, 0x27, 0x00, 0x00, 0xff,
	0xff, 0xb6, 0x99, 0xf4, 0x8b, 0x50, 0x03, 0x00, 0x00,
}
